gender = c(sample(c("male", "female"), 1000, replace = T))
weight.before = c(sample(40:96), 800, replace = T), rep(NA, 200))
weight.before = c(sample(40:96, 800, replace = T), rep(NA, 200))
after = weight.before + sample(-5:10, 1000)
after = weight.before + sample(-5:10, 1000, replace = T)
weight.after = after
rtype = c(sample(c("active", "non-active"), 800, replace = T), rep(NA, 200))
score = c(sample(1:3, 300, replace = T), sample(3:5, 700, replace = T))
d = cbind.data.frame(gender, weight.before, weight.after, rtype, score)
data = d[sample(1:nrow(d), 1000), ]
View(data)
library(dplyr)
w = data$weight.before
w[w >= 50 & w <= 70]
length(w[w >= 50 & w <= 70])
g = data$gender
table(g)
females <- which(g == "female")
females
length(females)
g_num <- as.numeric(ifelse(g == "female", 0, 1))
g_num
head(females)
head(g_num)
data <- data %>% mutate(weight.diff = weight.after - weight.before)
View(data)
boxplot(data$weight.diff)
boxplot(data$weight.diff ~ data$rtype)
weight.after
table(weight.after)
gender = c(sample(c("male", "female"), 1000, replace = T))
rtype = c(sample(c("active", "non-active"), 800, replace = T), rep(NA, 200))
weight.before = c(sample(40:96, 800, replace = T), rep(NA, 200))
score = c(sample(1:3, 300, replace = T), sample(3:5, 700, replace = T))
d = cbind.data.frame(gender, weight.before, rtype, score)
data = d[sample(1:nrow(d), 1000), ]
w.a <- rep(NA, 100)
w.a <- rep(NA, 100)
for (i in 1:nrow(data)){
(if data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, replace = T)}
}
w.a <- rep(NA, 100)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, replace = T)}
}
data$rtype
data$rtype == 'active'
w.a <- rep(NA, 100)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, 1000, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, 1000, replace = T)}
}
data$rtype[1]
data$rtype[2]
w.a <- rep(NA, 100)
for (i in 1:nrow(data)){
if (data$rtype == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, 1000, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, 1000, replace = T)}
}
w.a
data <- data %>% mutate(weight.after = w.a)
View(data)
-5:10
data$rtype == 'active'
w.a <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, 1000, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, 1000, replace = T)}
}
data <- data %>% mutate(weight.after = w.a)
gender = c(sample(c("male", "female"), 1000, replace = T))
rtype = c(sample(c("active", "non-active"), 1000, replace = T))
weight.before = c(sample(40:96, 800, replace = T), rep(NA, 200))
score = c(sample(1:3, 300, replace = T), sample(3:5, 700, replace = T))
d = cbind.data.frame(gender, weight.before, rtype, score)
data = d[sample(1:nrow(d), 1000), ]
w.a <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, 1000, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, 1000, replace = T)}
}
data <- data %>% mutate(weight.after = w.a)
w = data$weight.before
g = data$gender
length(w[w >= 50 & w <= 70])
table(g)
females <- which(g == "female")
length(females)
head(females)
g_num <- as.numeric(ifelse(g == "female", 0, 1))
head(g_num)
data <- data %>% mutate(weight.diff = weight.after - weight.before)
View(data)
boxplot(data$weight.diff ~ data$rtype)
data <- data %>% mutate(weight.diff.gr = weight.diff * 1000)
View(data)
gender = c(sample(c("male", "female"), 1000, replace = T))
rtype = c(sample(c("active", "non-active"), 1000, replace = T))
weight.before = c(sample(40:96, 800, replace = T), rep(NA, 200))
score = c(sample(1:3, 300, replace = T), sample(3:5, 700, replace = T))
d = cbind.data.frame(gender, weight.before, rtype, score)
data = d[sample(1:nrow(d), 1000), ]
w.a <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, 1000, replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, 1000, replace = T)}
}
data <- data %>% mutate(weight.after = w.a)
weight.after = weight.before + sample(-5:10, 1000, replace = T)
write.csv(data, "holidays.csv")
data <- data %>% mutate(status = ifelse(weight.diff > 0, "not ok", "ok"))
data <- data %>% mutate(weight.diff = weight.after - weight.before)
data <- data %>% mutate(status = ifelse(weight.diff > 0, "not ok", "ok"))
View(data)
filter(data, weight.diff == 0)
active_male <- data %>% filter(gender == 'male', rtype = 'active')
active_male <- data %>% filter(gender == 'male', rtype == 'active')
str(active_male)
dim(active_male)
df <- read.csv("holidays.csv")
w = df$weight.before
g = df$gender
data <- df %>% mutate(weight.diff = weight.after - weight.before)
data <- df %>% mutate(status = ifelse(weight.diff > 0, "not ok", "ok"))
View(df)
data <- df %>% mutate(weight.diff = weight.after - weight.before)
data <- df %>% mutate(status = ifelse(weight.diff > 0, "not ok", "ok"))
df <- df %>% mutate(weight.diff = weight.after - weight.before)
df <- df %>% mutate(status = ifelse(weight.diff > 0, "not ok", "ok"))
View(df)
active_male <- df %>% filter(gender == 'male', rtype == 'active')
str(active_male)
dim(active_male)
sum(df[!complete.cases(df),])
complete.cases(df)
!complete.cases(df)
sum(!complete.cases(df))
library(VIM)
library(mice)
aggr(df)
matrixplot(df)
df %>% group_by(score) %>% tally
df %>% group_by(score) %>% summarise(median = median(score))
df %>% group_by(rtype) %>% summarise(median = median(score))
sc <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){sc[i] <- sample(3:5, 1000, replace = T)}
else{sc[i] <- sample(1:3, 1000, replace = T)}
}
sum(data$rtype == 'active')
w.a <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, sum(data$rtype == 'active'), replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, sum(data$rtype != 'active'), replace = T)}
}
gender = c(sample(c("male", "female"), 1000, replace = T))
rtype = c(sample(c("active", "non-active"), 1000, replace = T))
weight.before = c(sample(40:96, 800, replace = T), rep(NA, 200))
d = cbind.data.frame(gender, weight.before, rtype, score)
data = d[sample(1:nrow(d), 1000), ]
w.a <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){w.a[i] <- data$weight.before[i] + sample(-5:2, sum(data$rtype == 'active'), replace = T)}
else{w.a[i] <- data$weight.before[i] + sample(1:8, sum(data$rtype != 'active'), replace = T)}
}
sc <- rep(NA, 1000)
for (i in 1:nrow(data)){
if (data$rtype[i] == 'active'){sc[i] <- sample(3:5, 1000, replace = T)}
else{sc[i] <- sample(1:3, 1000, replace = T)}
}
data <- data %>% mutate(weight.after = w.a, score = sc)
View(data)
write.csv(data, "holidays.csv")
df <- read.csv("holidays.csv")
w = df$weight.before
g = df$gender
length(w[w >= 50 & w <= 70])
table(g)
females <- which(g == "female")
length(females)
head(females)
g_num <- as.numeric(ifelse(g == "female", 0, 1))
head(g_num)
df <- df %>% mutate(weight.diff = weight.after - weight.before)
df <- df %>% mutate(status = ifelse(weight.diff > 0, "not ok", "ok"))
View(df)
active_male <- df %>% filter(gender == 'male', rtype == 'active')
str(active_male)
dim(active_male)
sum(!complete.cases(df)) # 200 строк
aggr(df)
matrixplot(df)
df %>% group_by(score) %>% tally
df %>% group_by(rtype) %>% summarise(median = median(score))
df %>% group_by(gender) %>% summarise(max = max(weight.diff))
df %>% group_by(gender) %>% summarise(max = max(weight.diff, na.rm = T))
df %>% arrange(desc(score)) %>% head(10)
df %>% arrange(desc(score)) %>% tail(10)
boxplot(weight.after)
boxplot(weight.after) # выбросов нет
boxplot(weight.after, col = "yellow", title = "Weight difference") # выбросов нет
boxplot(weight.after, col = "yellow", main = "Weight difference") # выбросов нет
plot(weight.after, score)
cor(weight.after, score, type = "sp")
cor(weight.after, score, method = "sp")
cor(weight.after, score, method = "sp", na.rm = T)
cor(weight.after, score, method = "sp", use = "complete.obs")
cor.test(weight.after, score, method = "sp", use = "complete.obs")
plot(dfgender)
plot(df$gender)
plot(df$gender, main = "Gender")
library(ggplot2)
ggplot(data = df, aes(x = '', y = weight.diff)) + geom_violin()
ggplot(data = df, aes(x = '', y = weight.diff)) + geom_violin() +
facet_grid(rtype)
ggplot(data = df, aes(x = '', y = weight.diff)) + geom_violin() +
facet_grid(rtype)
ggplot(data = df, aes(x = '', y = weight.diff, group = rtype)) + geom_violin() +
facet_grid(rtype)
ggplot(data = df, aes(x = '', y = weight.diff)) + geom_violin() +
facet_grid(~rtype)
age_filter <- function(age){
if (age < 18){print("Этот человек не может голосовать.")}
else{"Этот человек может голосовать."}
}
age_filter(21)
age_filter(16)
f <- function(x){print(x)}
f(2)
f2 <- function(x){cat(x)}
f2(2)
res = f(2)
res
res2 = f2(2)
res2
hse_compare <- function(date){
date_v <- unlist(strsplit(date))
if (date_v[2] < 11){return(print("Ваш день рождения раньше, чем день рождения Вышки."))}
if (date_v[2] > 11){return(print("Ваш день рождения позже, чем день рождения Вышки."))}
if (date_v[2] == 11){return(print("Вы родились в один месяц с Вышкой!")}
}
hse_compare <- function(date){
date_v <- unlist(strsplit(date))
if (date_v[2] < 11){return(print("Ваш день рождения раньше, чем день рождения Вышки."))}
if (date_v[2] > 11){return(print("Ваш день рождения позже, чем день рождения Вышки."))}
if (date_v[2] == 11){return(print("Вы родились в один месяц с Вышкой!")}
}
hse_compare <- function(date){
date_v <- unlist(strsplit(date))
if (date_v[2] < 11){r = print("Ваш день рождения раньше, чем день рождения Вышки.")}
if (date_v[2] > 11){r = print("Ваш день рождения позже, чем день рождения Вышки.")}
if (date_v[2] == 11){r= print("Вы родились в один месяц с Вышкой!"}
return(r)
}
# 2
hse_compare <- function(date){
date_v <- unlist(strsplit(date))
if (date_v[2] < 11){print("Ваш день рождения раньше, чем день рождения Вышки.")}
if (date_v[2] > 11){print("Ваш день рождения позже, чем день рождения Вышки.")}
if (date_v[2] == 11){print("Вы родились в один месяц с Вышкой!"}
}
hse_compare <- function(date){
date_v <- unlist(strsplit(date))
if (date_v[2] < 11)print("Ваш день рождения раньше, чем день рождения Вышки.")
if (date_v[2] > 11)print("Ваш день рождения позже, чем день рождения Вышки.")
if (date_v[2] == 11)print("Вы родились в один месяц с Вышкой!"
}
hse_compare <- function(date){
date_v <- unlist(strsplit(date))
if (date_v[2] < 11){print("Ваш день рождения раньше, чем день рождения Вышки.")}
if (date_v[2] > 11){print("Ваш день рождения позже, чем день рождения Вышки.")}
if (date_v[2] == 11){print("Вы родились в один месяц с Вышкой!")}
}
hse_compare <- function(){
date <- readline(prompt = "Введите день и месяц рождения: ")
date_v <- unlist(strsplit(date))
if (date_v[2] < 11){print("Ваш день рождения раньше, чем день рождения Вышки.")}
if (date_v[2] > 11){print("Ваш день рождения позже, чем день рождения Вышки.")}
if (date_v[2] == 11){print("Вы родились в один месяц с Вышкой!")}
}
hse_compare()
hse_compare <- function(){
date <- readline(prompt = "Введите день и месяц рождения: ")
date_v <- unlist(strsplit(date, " "))
if (date_v[2] < 11){print("Ваш день рождения раньше, чем день рождения Вышки.")}
if (date_v[2] > 11){print("Ваш день рождения позже, чем день рождения Вышки.")}
if (date_v[2] == 11){print("Вы родились в один месяц с Вышкой!")}
}
hse_compare()
hse_compare()
hse_compare()
df <- read.csv("holidays.csv")
View(df)
